{"ast":null,"code":"// const { MongoClient, ServerApiVersion } = require(\"mongodb\");\n\n// // Replace the following with your Atlas connection string                                                                                                                                        \n// const url = \"mongodb+srv://ranadeeps28:UgXnihSqjT8I7xaq@posts.5v820xp.mongodb.net/?retryWrites=true&w=majority\"\n// const client = new MongoClient(url,{\n//     serverApi: {\n//         version: ServerApiVersion.v1,\n//         strict: true,\n//         deprecationErrors: true,\n//       }\n// });\n\n//  // Reference the database to use\n//  const dbName = \"Userposts\";\n\n//  async function run() {\n//     try {\n//         // Connect to the Atlas cluster\n//          await client.connect();\n//          const db = client.db(dbName);\n\n//          // Reference the \"people\" collection in the specified database\n//          const col = db.collection(\"data\");\n\n//          // Create a new document                                                                                                                                           \n//          let personDocument = {\n//              \"name\": \"Ranadee\",\n//              \"Content\":\"My first Post\",\n//              \"Comments\":{}\n//          }\n\n//          // Insert the document into the specified collection        \n//          const p = await col.insertOne(personDocument);\n//          console.log(p)\n//          // Find and return the document\n//          const filter = { \"name.last\": \"Turing\" };\n//          //const document = await col.findOne(filter);\n//          //console.log(\"Document found:\\n\" + JSON.stringify(document));\n\n//         } catch (err) {\n//          console.log(err.stack);\n//      }\n\n//      finally {\n//         await client.close();\n//     }\n// }\n// module.exports={run}\nasync function run() {}","map":{"version":3,"names":["run"],"sources":["C:/Users/Pranadeep Reddy/Desktop/K/project-talk/src/Backend/Mongoclient.js"],"sourcesContent":["// const { MongoClient, ServerApiVersion } = require(\"mongodb\");\r\n \r\n// // Replace the following with your Atlas connection string                                                                                                                                        \r\n// const url = \"mongodb+srv://ranadeeps28:UgXnihSqjT8I7xaq@posts.5v820xp.mongodb.net/?retryWrites=true&w=majority\"\r\n// const client = new MongoClient(url,{\r\n//     serverApi: {\r\n//         version: ServerApiVersion.v1,\r\n//         strict: true,\r\n//         deprecationErrors: true,\r\n//       }\r\n// });\r\n \r\n//  // Reference the database to use\r\n//  const dbName = \"Userposts\";\r\n                      \r\n//  async function run() {\r\n//     try {\r\n//         // Connect to the Atlas cluster\r\n//          await client.connect();\r\n//          const db = client.db(dbName);\r\n\r\n//          // Reference the \"people\" collection in the specified database\r\n//          const col = db.collection(\"data\");\r\n\r\n//          // Create a new document                                                                                                                                           \r\n//          let personDocument = {\r\n//              \"name\": \"Ranadee\",\r\n//              \"Content\":\"My first Post\",\r\n//              \"Comments\":{}\r\n//          }\r\n\r\n//          // Insert the document into the specified collection        \r\n//          const p = await col.insertOne(personDocument);\r\n//          console.log(p)\r\n//          // Find and return the document\r\n//          const filter = { \"name.last\": \"Turing\" };\r\n//          //const document = await col.findOne(filter);\r\n//          //console.log(\"Document found:\\n\" + JSON.stringify(document));\r\n\r\n//         } catch (err) {\r\n//          console.log(err.stack);\r\n//      }\r\n \r\n//      finally {\r\n//         await client.close();\r\n//     }\r\n// }\r\n// module.exports={run}\r\nasync function run(){\r\n    \r\n}\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAeA,GAAGA,CAAA,EAAE,CAEpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}